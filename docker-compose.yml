services:
  app:
    build:
      context: ./login
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    ports:
      - 9000:9000
    depends_on:
      - db

  queue-worker:
    build:
      context: ./login
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    depends_on:
      - db
    command: php artisan queue:work
  
  caddy:
    image: caddy:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./login:/var/www/html
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped 
    networks:
      - docker-network
    depends_on:
      - app
    

  db:
    image: mysql:latest
    platform: linux/amd64
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
    networks:
      - docker-network

  redis:
    image: bitnami/redis:7.2
    platform: linux/amd64
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis-data:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - docker-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    ports:
      - 8080:80  # Expose phpMyAdmin on port 8080
    environment:
      - PMA_HOST=db  # Set the host to the db service (MySQL)
      - PMA_PORT=3306  # Default MySQL port
      # - PMA_USER=${DB_USERNAME}  # Use the DB username from environment
      # - PMA_PASSWORD=${DB_PASSWORD}  # Use the DB password from environment
    networks:
      - docker-network
    depends_on:
      - db

volumes:
  db-data:
  redis-data:
  caddy_data:
  caddy_config:

networks:
  docker-network:
    driver: bridge
