services:
  app:
    build:
      context: ./login
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
        - docker-network
    ports:
      - 9000:9000
    depends_on:
      - db

  queue-worker:
    build:
      context: ./login
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    depends_on:
      - db
    command: php artisan queue:work
  
  caddy:
    image: caddy:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./login:/var/www/html
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - docker-network
    depends_on:
      - app

  db:
    image: mysql:latest
    platform: linux/amd64
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
    networks:
      - docker-network

  redis:
    image: bitnami/redis:7.2
    platform: linux/amd64
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis-data:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - docker-network

volumes:
  db-data:
  redis-data:

networks:
  docker-network:
    driver: bridge
